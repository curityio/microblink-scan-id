/**
 * Copyright (c) Microblink Ltd. All rights reserved.
 */
import { RecognizerRunner, WasmModuleProxy, WasmSDK, Recognizer, ProductIntegrationInfo } from "../DataStructures";
import * as License from "../License";
import { MetadataCallbacks } from "../MetadataCallbacks";
import { WasmType } from "../WasmType";
declare class WasmModuleLocalProxy implements WasmModuleProxy {
    private readonly realWasmModule;
    constructor(realWasmModule: any);
    newRecognizer(className: string, ...constructorArgs: any[]): Promise<Recognizer>;
    createRecognizerRunner(recognizers: Array<Recognizer>, allowMultipleResults?: boolean, metadataCallbacks?: MetadataCallbacks): Promise<RecognizerRunner>;
    getActiveLicenseTokenInfo(): License.LicenseUnlockResult;
}
export declare class WasmSDKLocal implements WasmSDK {
    readonly mbWasmModule: WasmModuleLocalProxy;
    readonly showOverlay: boolean;
    readonly loadedWasmType: WasmType;
    readonly userId: string;
    constructor(wasmModule: any, showOverlay: boolean, loadedWasmType: WasmType, userId: string);
    delete(): void;
    getProductIntegrationInfo(): Promise<ProductIntegrationInfo>;
}
export {};
